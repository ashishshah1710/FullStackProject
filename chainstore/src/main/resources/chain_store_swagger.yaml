openapi: 3.0.0
info:
  title: Chain Store Microservice
  version: 1.0.0
  description: API for managing chain store branches

paths:
  /store/createStore:
    post:
      summary: Create a new store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCreateRequest'
      responses:
        '201':
          description: Store created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad request
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /store/{id}:
    get:
      summary: Get store details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Store details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad request
        '404':
          description: Store not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a store
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Store deleted successfully
        '400':
          description: Bad request
        '404':
          description: Store not found
        '500':
          description: Internal server error

  /store/updateStore:
    put:
      summary: Update store details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreUpdateRequest'
      responses:
        '200':
          description: Store updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        '400':
          description: Bad request
        '404':
          description: Store not found
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /store/orderPhones:
    post:
      summary: Place an order for phones (decrease quantity from relevant phones)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneOrderRequest'
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Bad request
        '404':
          description: Phone not found
        '422':
          description: Insufficient quantity
        '500':
          description: Internal server error

  /store/increaseQuantity:
    put:
      summary: Increase quantity of a specific phone model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuantityUpdateRequest'
      responses:
        '200':
          description: Quantity increased successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '404':
          description: Phone not found
        '500':
          description: Internal server error

  /store/decreaseQuantity:
    put:
      summary: Decrease quantity of a specific phone model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuantityUpdateRequest'
      responses:
        '200':
          description: Quantity decreased successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '404':
          description: Phone not found
        '422':
          description: Insufficient quantity
        '500':
          description: Internal server error

  /store/id/{id}:
    get:
      summary: Retrieve a single phone by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Phone details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '404':
          description: Phone not found
        '500':
          description: Internal server error

  /store/ids:
    get:
      summary: Retrieve multiple phones by their IDs
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: form
          explode: false
      responses:
        '200':
          description: List of phones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /store/model/{model}:
    get:
      summary: Retrieve phones by a specific model (e.g., Apple)
      parameters:
        - in: path
          name: model
          required: true
          schema:
            type: string
            enum:
              - Apple
              - Samsung
              - OnePlus
              - Xiaomi
              - Google
      responses:
        '200':
          description: List of phones for the model
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '404':
          description: No phones found for this model
        '500':
          description: Internal server error

  /store/models:
    get:
      summary: Retrieve phones by multiple models
      parameters:
        - in: query
          name: models
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Apple
                - Samsung
                - OnePlus
                - Xiaomi
                - Google
          style: form
          explode: false
      responses:
        '200':
          description: List of phones for the specified models
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /store/catalog:
    get:
      summary: Get all phones in the catalog
      responses:
        '200':
          description: Complete phone catalog
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
        '500':
          description: Internal server error

  /store/addPhones:
    post:
      summary: Add new phones to the catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPhonesRequest'
      responses:
        '201':
          description: Phones added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phone'
        '400':
          description: Bad request
        '422':
          description: Validation error
        '500':
          description: Internal server error

  /store/phone/id/{id}:
    delete:
      summary: Delete a phone by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Phone deleted successfully
        '400':
          description: Bad request
        '404':
          description: Phone not found
        '500':
          description: Internal server error

  /store/phone/ids:
    delete:
      summary: Delete multiple phones by IDs
      parameters:
        - in: query
          name: phoneIds
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: form
          explode: false
          description: Array of phone IDs to delete
      responses:
        '204':
          description: Phones deleted successfully
        '400':
          description: Bad request
        '404':
          description: One or more phones not found
        '500':
          description: Internal server error
  /store/{storeId}/phones:
    get:
      tags:
        - Store Controller
      summary: Get phones by store ID
      description: Fetch all phones for a specific store
      operationId: fetchPhonesByStoreId
      parameters:
        - name: storeId
          in: path
          description: ID of the store to fetch phones for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Phones fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Get phones by store ID request sent"
                  requestId:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  storeId:
                    type: string
                    example: "store123"
                  storeName:
                    type: string
                    example: "Downtown Store"
        '404':
          description: Store not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Store not found with storeId: store123"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

components:
  schemas:
    Store:
      type: object
      properties:
        id:
          type: string
        storeName:
          type: string
          minLength: 10
          maxLength: 50
        address:
          type: string
          minLength: 10
          maxLength: 50
        managerName:
          type: string
          minLength: 5
          maxLength: 15

    StoreCreateRequest:
      type: object
      required:
        - storeName
        - address
        - managerName
      properties:
        storeName:
          type: string
          minLength: 10
          maxLength: 50
        address:
          type: string
          minLength: 10
          maxLength: 50
        managerName:
          type: string
          minLength: 5
          maxLength: 15

    StoreUpdateRequest:
      type: object
      required:
        - id
        - storeName
        - address
        - managerName
      properties:
        id:
          type: string
        storeName:
          type: string
          minLength: 10
          maxLength: 50
        address:
          type: string
          minLength: 10
          maxLength: 50
        managerName:
          type: string
          minLength: 5
          maxLength: 15

    Phone:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier (UUID) - generated by system
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        type:
          type: string
          minLength: 5
          maxLength: 15
          description: Phone type/name (e.g., iPhone 16, Galaxy S24)
          example: "iPhone 16"
        model:
          type: string
          description: Phone manufacturer
          example: "Apple"
          enum:
            - Apple
            - Samsung
            - OnePlus
            - Xiaomi
            - Google
        quantity:
          type: integer
          minimum: 0
          maximum: 1000
          format: int32
          description: Stock count (0 or higher)
          example: 50
        price:
          type: number
          format: double
          minimum: 0.01
          maximum: 9999.99
          description: Unit price in USD
          example: 999.99
        isAvailable:
          type: boolean
          description: Whether phone is available for sale
          example: true
        dateAdded:
          type: string
          format: date-time
          description: Date when added to inventory (ISO 8601 format)
          example: "2025-07-23T09:19:44.527Z"
        storeId:
          type: string
          description: ID of the store that owns this phone
          writeOnly: true
          x-lombok-exclude-toString: true
      required:
        - id
        - type
        - model
        - quantity
        - price
        - isAvailable
        - dateAdded
        - storeId

    PhoneCreateRequest:
      type: object
      properties:
        type:
          type: string
          minLength: 5
          maxLength: 15
          description: Phone type/name (e.g., iPhone 16, Galaxy S24)
          example: "iPhone 16"
        model:
          type: string
          description: Phone manufacturer
          example: "Apple"
          enum:
            - Apple
            - Samsung
            - OnePlus
            - Xiaomi
            - Google
        quantity:
          type: integer
          minimum: 0
          maximum: 1000
          format: int32
          description: Stock count (0 or higher)
          example: 50
        price:
          type: number
          format: double
          minimum: 0.01
          maximum: 9999.99
          description: Unit price in USD
          example: 999.99
        isAvailable:
          type: boolean
          description: Whether phone is available for sale
          example: true
      required:
        - type
        - model
        - quantity
        - price
        - isAvailable

    AddPhonesRequest:
      type: object
      properties:
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneCreateRequest'
          minItems: 1
      required:
        - phones

    PhoneOrderRequest:
      type: object
      properties:
        orders:
          type: array
          items:
            type: object
            properties:
              phoneId:
                type: string
                format: uuid
              quantity:
                type: integer
                minimum: 1
              storeId:
                type: string
                format: uuid
            required:
              - phoneId
              - quantity
              - storeId
          minItems: 1
      required:
        - orders

    QuantityUpdateRequest:
      type: object
      properties:
        phoneId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
          maximum: 1000
      required:
        - phoneId
        - quantity

    OrderResponse:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - SUCCESS
            - PARTIAL_SUCCESS
            - FAILED
        processedItems:
          type: array
          items:
            type: object
            properties:
              phoneId:
                type: string
                format: uuid
              requestedQuantity:
                type: integer
              processedQuantity:
                type: integer
              status:
                type: string
                enum:
                  - SUCCESS
                  - INSUFFICIENT_STOCK
                  - NOT_FOUND
        message:
          type: string