{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const createStore = data => apiClient.post('/store/createStore', data);\nexport const getStore = id => apiClient.get(`/store/${id}`);\nexport const updateStore = data => apiClient.put('/store/updateStore', data);\nexport const deleteStore = id => apiClient.delete(`/store/${id}`);\n\n// Optional: Add a function to get all stores\nexport const getAllStores = () => apiClient.get('/store/getAllStores');","map":{"version":3,"names":["axios","BASE_URL","apiClient","create","baseURL","headers","timeout","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","createStore","post","getStore","id","get","updateStore","put","deleteStore","delete","getAllStores"],"sources":["C:/Users/ashshah/Downloads/store-ui/src/api/storeService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8080';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000, // 10 seconds timeout\n});\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const createStore = (data) => apiClient.post('/store/createStore', data);\nexport const getStore = (id) => apiClient.get(`/store/${id}`);\nexport const updateStore = (data) => apiClient.put('/store/updateStore', data);\nexport const deleteStore = (id) => apiClient.delete(`/store/${id}`);\n\n// Optional: Add a function to get all stores\nexport const getAllStores = () => apiClient.get('/store/getAllStores');"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EAClE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIJ,IAAI,IAAKX,SAAS,CAACgB,IAAI,CAAC,oBAAoB,EAAEL,IAAI,CAAC;AAC/E,OAAO,MAAMM,QAAQ,GAAIC,EAAE,IAAKlB,SAAS,CAACmB,GAAG,CAAC,UAAUD,EAAE,EAAE,CAAC;AAC7D,OAAO,MAAME,WAAW,GAAIT,IAAI,IAAKX,SAAS,CAACqB,GAAG,CAAC,oBAAoB,EAAEV,IAAI,CAAC;AAC9E,OAAO,MAAMW,WAAW,GAAIJ,EAAE,IAAKlB,SAAS,CAACuB,MAAM,CAAC,UAAUL,EAAE,EAAE,CAAC;;AAEnE;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAA,KAAMxB,SAAS,CAACmB,GAAG,CAAC,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}